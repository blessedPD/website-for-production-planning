[{"/Users/kimsejin/Desktop/projects/website-for-production-planning/src/index.js":"1","/Users/kimsejin/Desktop/projects/website-for-production-planning/src/App.js":"2","/Users/kimsejin/Desktop/projects/website-for-production-planning/src/component/NavBar.js":"3","/Users/kimsejin/Desktop/projects/website-for-production-planning/src/component/Login.js":"4","/Users/kimsejin/Desktop/projects/website-for-production-planning/src/component/Dashboard.js":"5","/Users/kimsejin/Desktop/projects/website-for-production-planning/src/component/DailyChart.js":"6","/Users/kimsejin/Desktop/projects/website-for-production-planning/src/component/OneDayChart.js":"7","/Users/kimsejin/Desktop/projects/website-for-production-planning/src/component/SelectedList1.js":"8","/Users/kimsejin/Desktop/projects/website-for-production-planning/src/component/Table1.js":"9","/Users/kimsejin/Desktop/projects/website-for-production-planning/src/component/Search1.js":"10"},{"size":234,"mtime":1668059474989,"results":"11","hashOfConfig":"12"},{"size":1769,"mtime":1668612583085,"results":"13","hashOfConfig":"12"},{"size":2154,"mtime":1668237146624,"results":"14","hashOfConfig":"12"},{"size":2491,"mtime":1668238213656,"results":"15","hashOfConfig":"12"},{"size":408,"mtime":1668863590454,"results":"16","hashOfConfig":"12"},{"size":2124,"mtime":1668860480239,"results":"17","hashOfConfig":"12"},{"size":699,"mtime":1668860983129,"results":"18","hashOfConfig":"12"},{"size":2064,"mtime":1669017941996,"results":"19","hashOfConfig":"12"},{"size":1463,"mtime":1669018043564,"results":"20","hashOfConfig":"12"},{"size":1011,"mtime":1669018960612,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"1k3hqx4",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"25"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"25"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"25"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"25"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"25"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"25"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/kimsejin/Desktop/projects/website-for-production-planning/src/index.js",[],[],[],"/Users/kimsejin/Desktop/projects/website-for-production-planning/src/App.js",["59","60"],[],"import {useEffect, useState} from \"react\";\nimport NavBar from \"./component/NavBar.js\";\nimport Login from \"./component/Login.js\";\nimport Dashboard from \"./component/Dashboard.js\";\nimport { render } from '@testing-library/react';\n\n\nfunction App() {\n  const [isLogin, changeIsLogin] = useState(false); //로그인 여부 나타내는 변수\n  const [isLoginSuccess, changeIsLoginSuccess] = useState(true);\n  const [userName, changeUserName] = useState(\"\");\n  const [userTeam, changeUserTeam] = useState(\"\");\n  const [userRank, changeUserRank] = useState(\"\");\n\n  //로그인 여부 나타내는 함수 (Login 에 전달)\n  const checkLogin = (id,pw) =>{\n\n    //임시로 sejin, 1234로 해놓음. 나중에는 백엔드랑 소통해야함\n    if (id===\"sejin\" && pw===\"1234\"){\n      changeIsLogin(true);\n      console.log(`로그인 성공`);\n\n      ////// 삭제 예정\n      changeUserName(\"김세진\");     \n      changeUserTeam(\"생산관리 1팀\");\n      changeUserRank(\"사원\");\n      \n      //////\n    }else{\n      console.log(\"로그인 실패\");\n      changeIsLoginSuccess(false);\n    }\n    \n    \n  };\n  \n  //로그아웃 전달 받는 함수 (NavBar 컴포넌트에 전달)\n  const logOutClicked =()=>{\n    changeIsLogin(false);\n    changeUserName(\"\");\n    changeUserTeam(\"\");\n    changeUserRank(\"\");\n    changeIsLoginSuccess(true);\n  };\n\n  return (\n    <div \n      style = \n      {{display : \"flex\",\n        flexDirection : \"column\",\n        \n      }}>\n\n      <NavBar userNameFromApp={userName} userTeamFromApp={userTeam} \n      userRankFromApp={userRank} logOutClick={logOutClicked} /> \n      {isLogin? null : <Login checkLogin={checkLogin} isLoginSuccess={isLoginSuccess}/>}\n      {isLogin? <Dashboard />: null} \n      \n    </div>\n  );\n}\n\nexport default App;\n","/Users/kimsejin/Desktop/projects/website-for-production-planning/src/component/NavBar.js",["61","62"],[],"import {useEffect, useState} from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport { faUser, faHouseChimney } from \"@fortawesome/free-solid-svg-icons\";\nimport styles from \"./NavBar.module.css\";\n\nfunction NavBar ({userNameFromApp,userTeamFromApp, userRankFromApp,logOutClick}) {\n    \n    return (\n        <section id={styles.navbar}>\n            <div class={styles.navbar__upper}>\n                <div class={styles.navbar__title}>\n                    <FontAwesomeIcon icon={faHouseChimney} id={styles.navbar__title__logo} />\n                    <h1>생산 준비 현황 Dashboard</h1>\n                </div>\n                <div class={styles.navbar__userInfo}>\n                    <div class={styles.navbar__userInfo__left}>\n                        <FontAwesomeIcon icon={faUser} id={styles.navbar__userInfo__logo}/>\n                        <button class={styles.navbar__userInfo__logout}\n                        onClick={logOutClick}\n                        >\n                            Logout\n                        </button> \n                    </div>\n                    \n                    <div class={styles.navbar__userInfo__profile}>\n                        <h3 class={styles.navbar__userInfo__name}>{userNameFromApp}</h3>\n                        <span class=\"navbar__userInfo__about\">{userTeamFromApp} / {userRankFromApp}</span>\n                    </div>\n                    \n                </div>\n            </div>\n            <hr class={styles.hr} />\n            <div class={styles.navbar__under}>\n                <div class=\"navbar__under__menu\">\n                    <h2>자재 준비 현황</h2>\n                </div>\n                <div class={styles.navbar__under__vl}>\n\n                </div>\n                <div class=\"navbar__under__menu\">\n                    <h2>문서 승인 현황</h2>\n                </div>\n                <div class={styles.navbar__under__vl}>\n\n                </div>\n                <div class=\"navbar__under__menu\">\n                    <h2>Raw Data 입력</h2>\n                </div>\n            </div>\n            \n        </section>\n    );\n};\n\nexport default NavBar;","/Users/kimsejin/Desktop/projects/website-for-production-planning/src/component/Login.js",["63","64"],[],"import {useEffect, useState} from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport { faUser, faHouseChimney,faKey } from \"@fortawesome/free-solid-svg-icons\";\nimport loginStyles from \"./Login.module.css\";\n\nfunction Login ({checkLogin, isLoginSuccess}) {\n    const [id, changeId] = useState(\"\");\n    const onIdChange = (event)=>{\n        changeId(event.target.value);\n    };\n\n    const [pw, changePw] = useState(\"\");\n    const onPwChange = (event)=>{\n        changePw(event.target.value);\n    };\n\n    const ClickLogin = ()=>{\n        checkLogin(id,pw);\n    };\n\n    return(\n        <section id={loginStyles.login}>\n            <div class={loginStyles.login__upper}>\n                {isLoginSuccess? null \n                :<span style={{color: \"red\"}}>\n                    * 로그인 실패!! ID와 Password를 확인해주세요 *\n                </span>\n                }\n                <div class={loginStyles.login__upper__inputBox}>\n                    <label htmlFor =\"userIcon\" class={loginStyles.login__inputBox__label}>\n                        <FontAwesomeIcon icon={faUser} />\n                    </label>\n                    <input placeholder=\"Username\" id=\"userIcon\" \n                    class={loginStyles.login__inputBox__input}\n                    value={id}\n                    type = \"text\"\n                    onChange={onIdChange}\n                    />\n                </div>\n                <div class={loginStyles.login__upper__inputBox}>\n                    <label htmlFor =\"pwIcon\" class={loginStyles.login__inputBox__label}>\n                        <FontAwesomeIcon icon={faKey} />\n                    </label>\n                    <input placeholder=\"****\" id=\"pwIcon\" \n                    class={loginStyles.login__inputBox__input} \n                    value={pw} \n                    type = \"text\"\n                    onChange={onPwChange}\n                    />\n                </div>\n            </div>\n\n            <div class={loginStyles.login__buttons}>\n                <div class={loginStyles.login__buttons__left}>\n                    <button>회원 가입</button>\n                    <button>ID/PW 찾기</button>\n                </div>\n                <div class={loginStyles.login__buttons__right}>\n                    <button onClick={ClickLogin}\n                    >\n                        Login\n                    </button>\n                </div>\n\n            </div>\n        </section>\n    );\n}\n\nexport default Login;","/Users/kimsejin/Desktop/projects/website-for-production-planning/src/component/Dashboard.js",["65","66"],[],"import {useEffect, useState} from \"react\";\nimport DailyChart from \"./DailyChart.js\";\nimport SelectedList1 from './SelectedList1.js';\n\n//props로 대쉬보드에 어떤거 띄울지 전달해서 띄워야함\n\nfunction Dashboard(){\n\n    return(\n        <div class=\"dashboard__main\">\n            <DailyChart />\n            <hr />\n            <SelectedList1 />\n        </div>\n    );\n}\n\n\nexport default Dashboard;","/Users/kimsejin/Desktop/projects/website-for-production-planning/src/component/DailyChart.js",["67","68"],[],"import {useEffect, useState} from \"react\";\nimport OneDayChart from './OneDayChart';\nimport styles from './DailyChart.module.css';\n\nfunction DailyChart(){\n\n    return(\n        <div>\n            <div class={styles.one_section}>\n                <OneDayChart day={1} title1={\"생산가능\"}\n                data1={47} title2={\"생산불가\"} data2={1}/>\n                <OneDayChart day={2} title1={\"생산가능\"}\n                data1={35} title2={\"생산불가\"} data2={3}/>\n                <OneDayChart day={3} title1={\"생산가능\"}\n                data1={42} title2={\"생산불가\"} data2={8}/>\n                <OneDayChart day={4} title1={\"생산가능\"}\n                data1={37} title2={\"생산불가\"} data2={13}/>\n                <OneDayChart day={5} title1={\"생산가능\"}\n                data1={41} title2={\"생산불가\"} data2={1}/>\n                <OneDayChart day={6} title1={\"생산가능\"}\n                data1={51} title2={\"생산불가\"} data2={14}/>\n                <OneDayChart day={7} title1={\"생산가능\"}\n                data1={39} title2={\"생산불가\"} data2={10}/>\n            \n            </div>\n            <div class={styles.one_section}>\n            <OneDayChart day={8} title1={\"생산가능\"}\n                data1={29} title2={\"생산불가\"} data2={3}/>\n                <OneDayChart day={9} title1={\"생산가능\"}\n                data1={44} title2={\"생산불가\"} data2={5}/>\n                <OneDayChart day={10} title1={\"생산가능\"}\n                data1={27} title2={\"생산불가\"} data2={1}/>\n                <OneDayChart day={11} title1={\"생산가능\"}\n                data1={31} title2={\"생산불가\"} data2={11}/>\n                <OneDayChart day={12} title1={\"생산가능\"}\n                data1={43} title2={\"생산불가\"} data2={7}/>\n                <OneDayChart day={13} title1={\"생산가능\"}\n                data1={55} title2={\"생산불가\"} data2={6}/>\n                <OneDayChart day={14} title1={\"생산가능\"}\n                data1={61} title2={\"생산불가\"} data2={10}/>\n            </div>\n        </div>\n        \n    );\n}\n\nexport default DailyChart;","/Users/kimsejin/Desktop/projects/website-for-production-planning/src/component/OneDayChart.js",["69","70"],[],"import {useEffect, useState} from \"react\";\nimport styles from \"./OneDayChart.module.css\";\n\nfunction OneDayChart({day,title1,data1,title2,data2}){\n\n    return(\n        <div class={styles.MainDiv}>\n            <h2>{day}일차</h2>\n            <div class={styles.upperDiv} >\n                <h3 class={styles.divText}>{title1}</h3>\n                <h3 class={styles.divText}>{data1}건</h3>\n            </div>\n            <div class={styles.emptyDiv}>\n\n            </div>\n            <div class={styles.lowerDiv}> \n                <h3 class={styles.divText}>{title2}</h3>\n                <h3 class={styles.divText}>{data2}건</h3>\n            </div>\n        </div>\n    );\n}\n\nexport default OneDayChart;","/Users/kimsejin/Desktop/projects/website-for-production-planning/src/component/SelectedList1.js",["71","72","73","74","75","76","77","78","79","80"],[],"/Users/kimsejin/Desktop/projects/website-for-production-planning/src/component/Table1.js",[],[],"/Users/kimsejin/Desktop/projects/website-for-production-planning/src/component/Search1.js",["81","82","83"],[],{"ruleId":"84","severity":1,"message":"85","line":1,"column":9,"nodeType":"86","messageId":"87","endLine":1,"endColumn":18},{"ruleId":"84","severity":1,"message":"88","line":5,"column":10,"nodeType":"86","messageId":"87","endLine":5,"endColumn":16},{"ruleId":"84","severity":1,"message":"85","line":1,"column":9,"nodeType":"86","messageId":"87","endLine":1,"endColumn":18},{"ruleId":"84","severity":1,"message":"89","line":1,"column":20,"nodeType":"86","messageId":"87","endLine":1,"endColumn":28},{"ruleId":"84","severity":1,"message":"85","line":1,"column":9,"nodeType":"86","messageId":"87","endLine":1,"endColumn":18},{"ruleId":"84","severity":1,"message":"90","line":3,"column":18,"nodeType":"86","messageId":"87","endLine":3,"endColumn":32},{"ruleId":"84","severity":1,"message":"85","line":1,"column":9,"nodeType":"86","messageId":"87","endLine":1,"endColumn":18},{"ruleId":"84","severity":1,"message":"89","line":1,"column":20,"nodeType":"86","messageId":"87","endLine":1,"endColumn":28},{"ruleId":"84","severity":1,"message":"85","line":1,"column":9,"nodeType":"86","messageId":"87","endLine":1,"endColumn":18},{"ruleId":"84","severity":1,"message":"89","line":1,"column":20,"nodeType":"86","messageId":"87","endLine":1,"endColumn":28},{"ruleId":"84","severity":1,"message":"85","line":1,"column":9,"nodeType":"86","messageId":"87","endLine":1,"endColumn":18},{"ruleId":"84","severity":1,"message":"89","line":1,"column":20,"nodeType":"86","messageId":"87","endLine":1,"endColumn":28},{"ruleId":"84","severity":1,"message":"85","line":1,"column":9,"nodeType":"86","messageId":"87","endLine":1,"endColumn":18},{"ruleId":"84","severity":1,"message":"89","line":1,"column":20,"nodeType":"86","messageId":"87","endLine":1,"endColumn":28},{"ruleId":"84","severity":1,"message":"91","line":2,"column":9,"nodeType":"86","messageId":"87","endLine":2,"endColumn":24},{"ruleId":"84","severity":1,"message":"92","line":3,"column":10,"nodeType":"86","messageId":"87","endLine":3,"endColumn":16},{"ruleId":"84","severity":1,"message":"90","line":3,"column":18,"nodeType":"86","messageId":"87","endLine":3,"endColumn":32},{"ruleId":"84","severity":1,"message":"93","line":3,"column":33,"nodeType":"86","messageId":"87","endLine":3,"endColumn":38},{"ruleId":"84","severity":1,"message":"94","line":3,"column":39,"nodeType":"86","messageId":"87","endLine":3,"endColumn":56},{"ruleId":"84","severity":1,"message":"95","line":4,"column":8,"nodeType":"86","messageId":"87","endLine":4,"endColumn":14},{"ruleId":"84","severity":1,"message":"96","line":6,"column":8,"nodeType":"86","messageId":"87","endLine":6,"endColumn":15},{"ruleId":"84","severity":1,"message":"97","line":54,"column":11,"nodeType":"86","messageId":"87","endLine":54,"endColumn":23},{"ruleId":"84","severity":1,"message":"92","line":3,"column":10,"nodeType":"86","messageId":"87","endLine":3,"endColumn":16},{"ruleId":"84","severity":1,"message":"90","line":3,"column":18,"nodeType":"86","messageId":"87","endLine":3,"endColumn":32},{"ruleId":"84","severity":1,"message":"93","line":3,"column":33,"nodeType":"86","messageId":"87","endLine":3,"endColumn":38},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'render' is defined but never used.","'useState' is defined but never used.","'faHouseChimney' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faUser' is defined but never used.","'faKey' is defined but never used.","'faMagnifyingGlass' is defined but never used.","'styles' is defined but never used.","'Search1' is defined but never used.","'handleSubmit' is assigned a value but never used."]