{"ast":null,"code":"var _jsxFileName = \"/Users/kimsejin/Desktop/projects/website-for-production-planning/src/component/UploadData.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCloudArrowUp, faUpload } from \"@fortawesome/free-solid-svg-icons\";\nimport styles from \"./UploadData.module.css\";\nimport { read } from 'xlsx';\nimport ExcelUpload from './ExcelUpload.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadData() {\n  _s();\n  const newUpload = e => {\n    console.log(e);\n  };\n\n  // useRef를 이용해 input태그에 접근한다.\n  const excelInput = useRef();\n\n  // 버튼클릭시 input태그에 클릭이벤트를 걸어준다. \n  const onCickExcelUpload = () => {\n    excelInput.current.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    class: styles.section,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: styles.upload,\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faCloudArrowUp,\n        size: \"5x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: styles.upload__button,\n        onClick: onCickExcelUpload,\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 18\n        }, this), \" Excel Upload\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        style: {\n          display: 'none'\n        },\n        onChange: newUpload,\n        ref: excelInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(UploadData, \"9XvBsUJ68hMTkZmc83n1+51P0Rw=\");\n_c = UploadData;\nexport default UploadData;\nvar _c;\n$RefreshReg$(_c, \"UploadData\");","map":{"version":3,"names":["useEffect","useState","useRef","FontAwesomeIcon","faCloudArrowUp","faUpload","styles","read","ExcelUpload","UploadData","newUpload","e","console","log","excelInput","onCickExcelUpload","current","click","section","upload","upload__button","display"],"sources":["/Users/kimsejin/Desktop/projects/website-for-production-planning/src/component/UploadData.js"],"sourcesContent":["import {useEffect, useState, useRef} from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faCloudArrowUp,faUpload } from \"@fortawesome/free-solid-svg-icons\";\nimport styles from \"./UploadData.module.css\";\nimport {read} from 'xlsx';\nimport ExcelUpload from './ExcelUpload.js';\n\n\nfunction UploadData(){\n\n    const newUpload = (e) =>{\n        console.log(e);\n    };\n\n    // useRef를 이용해 input태그에 접근한다.\n    const excelInput = useRef();\n\n    // 버튼클릭시 input태그에 클릭이벤트를 걸어준다. \n    const onCickExcelUpload = () => {\n    excelInput.current.click();\n    };\n\n    return(\n        <section class={styles.section}>\n            <div class={styles.upload}>\n                <FontAwesomeIcon icon={faCloudArrowUp} size='5x' />\n                <button class={styles.upload__button}\n                onClick={onCickExcelUpload} >\n                {<FontAwesomeIcon icon={faUpload}/>} Excel Upload\n                </button>\n                <input type='file' style={{display:'none'}} \n                onChange={newUpload} ref={excelInput} />\n            </div>\n        </section>\n    );\n}\n\nexport default UploadData;"],"mappings":";;AAAA,SAAQA,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAO,OAAO;AACjD,SAAQC,eAAe,QAAO,gCAAgC;AAC9D,SAAQC,cAAc,EAACC,QAAQ,QAAQ,mCAAmC;AAC1E,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,SAAQC,IAAI,QAAO,MAAM;AACzB,OAAOC,WAAW,MAAM,kBAAkB;AAAC;AAG3C,SAASC,UAAU,GAAE;EAAA;EAEjB,MAAMC,SAAS,GAAIC,CAAC,IAAI;IACpBC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;EAClB,CAAC;;EAED;EACA,MAAMG,UAAU,GAAGZ,MAAM,EAAE;;EAE3B;EACA,MAAMa,iBAAiB,GAAG,MAAM;IAChCD,UAAU,CAACE,OAAO,CAACC,KAAK,EAAE;EAC1B,CAAC;EAED,oBACI;IAAS,KAAK,EAAEX,MAAM,CAACY,OAAQ;IAAA,uBAC3B;MAAK,KAAK,EAAEZ,MAAM,CAACa,MAAO;MAAA,wBACtB,QAAC,eAAe;QAAC,IAAI,EAAEf,cAAe;QAAC,IAAI,EAAC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAG,eACnD;QAAQ,KAAK,EAAEE,MAAM,CAACc,cAAe;QACrC,OAAO,EAAEL,iBAAkB;QAAA,wBAC1B,QAAC,eAAe;UAAC,IAAI,EAAEV;QAAS;UAAA;UAAA;UAAA;QAAA,QAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QAC1B,eACT;QAAO,IAAI,EAAC,MAAM;QAAC,KAAK,EAAE;UAACgB,OAAO,EAAC;QAAM,CAAE;QAC3C,QAAQ,EAAEX,SAAU;QAAC,GAAG,EAAEI;MAAW;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EACtC;IAAA;IAAA;IAAA;EAAA,QACA;AAElB;AAAC,GA3BQL,UAAU;AAAA,KAAVA,UAAU;AA6BnB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}