{"ast":null,"code":"var _jsxFileName = \"/Users/kimsejin/Desktop/projects/website-for-production-planning/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport NavBar from \"./component/NavBar.js\";\nimport Login from \"./component/Login.js\";\nimport Dashboard from \"./component/Dashboard.js\";\nimport { render } from '@testing-library/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLogin, changeIsLogin] = useState(false); //로그인 여부 나타내는 변수\n  const [isLoginSuccess, changeIsLoginSuccess] = useState(true);\n  const [userName, changeUserName] = useState(\"\"); //사용자 이름\n  const [userTeam, changeUserTeam] = useState(\"\"); //사용자 부서\n  const [userRank, changeUserRank] = useState(\"\"); //사용자 직급\n\n  //현재 어느 메뉴인지\n  const [isHome, changeIsHome] = useState(false);\n  const [isMaterial, changeIsMaterial] = useState(false);\n  const [isDoc, changeIsDoc] = useState(false);\n  const [isImport, changeIsImport] = useState(false);\n  const [curMenu, changeCurMenu] = useState([isHome, isMaterial, isDoc, isImport]);\n  const changeMenu = () => {};\n\n  //로그인 여부 나타내는 함수 (Login 에 전달)\n  const conveyUserInfo = (id, pw, name, team, rank) => {\n    changeIsLogin(true);\n    changeUserName(name);\n    changeUserTeam(team);\n    changeUserRank(rank);\n    changeIsHome(true);\n    changeCurMenu([isHome, isMaterial, isDoc, isImport]);\n  };\n\n  //로그아웃 전달 받는 함수 (NavBar 컴포넌트에 전달)\n  const logOutClicked = () => {\n    changeIsLogin(false);\n    changeIsHome(false);\n    changeUserName(\"\");\n    changeUserTeam(\"\");\n    changeUserRank(\"\");\n    changeIsLoginSuccess(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      userNameFromApp: userName,\n      userTeamFromApp: userTeam,\n      userRankFromApp: userRank,\n      logOutClick: logOutClicked,\n      isHome: isHome,\n      curMenu: curMenu,\n      changeMenu: changeMenu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), isLogin ? null : /*#__PURE__*/_jsxDEV(Login, {\n      conveyUserInfo: conveyUserInfo,\n      isLoginSuccess: isLoginSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 24\n    }, this), isLogin ? /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"YyctIfqWUuW7gm8mtt9mvc8inns=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","NavBar","Login","Dashboard","render","App","isLogin","changeIsLogin","isLoginSuccess","changeIsLoginSuccess","userName","changeUserName","userTeam","changeUserTeam","userRank","changeUserRank","isHome","changeIsHome","isMaterial","changeIsMaterial","isDoc","changeIsDoc","isImport","changeIsImport","curMenu","changeCurMenu","changeMenu","conveyUserInfo","id","pw","name","team","rank","logOutClicked","display","flexDirection"],"sources":["/Users/kimsejin/Desktop/projects/website-for-production-planning/src/App.js"],"sourcesContent":["import {useEffect, useState} from \"react\";\nimport NavBar from \"./component/NavBar.js\";\nimport Login from \"./component/Login.js\";\nimport Dashboard from \"./component/Dashboard.js\";\nimport { render } from '@testing-library/react';\n\n\nfunction App() {\n  const [isLogin, changeIsLogin] = useState(false); //로그인 여부 나타내는 변수\n  const [isLoginSuccess, changeIsLoginSuccess] = useState(true);\n  const [userName, changeUserName] = useState(\"\"); //사용자 이름\n  const [userTeam, changeUserTeam] = useState(\"\"); //사용자 부서\n  const [userRank, changeUserRank] = useState(\"\"); //사용자 직급\n\n  //현재 어느 메뉴인지\n  const [isHome, changeIsHome] = useState(false);\n  const [isMaterial, changeIsMaterial] = useState(false);\n  const [isDoc, changeIsDoc] = useState(false);\n  const [isImport, changeIsImport] = useState(false);\n  const [curMenu, changeCurMenu] = useState([isHome, isMaterial, isDoc, isImport]);\n\n  const changeMenu = () => {\n\n  };\n\n  //로그인 여부 나타내는 함수 (Login 에 전달)\n  const conveyUserInfo = (id,pw,name,team,rank) =>{\n    changeIsLogin(true);\n    changeUserName(name);\n    changeUserTeam(team);\n    changeUserRank(rank);\n    changeIsHome(true);\n    changeCurMenu([isHome,isMaterial,isDoc,isImport]);\n  };\n  \n  //로그아웃 전달 받는 함수 (NavBar 컴포넌트에 전달)\n  const logOutClicked =()=>{\n    changeIsLogin(false);\n    changeIsHome(false);\n    changeUserName(\"\");\n    changeUserTeam(\"\");\n    changeUserRank(\"\");\n    changeIsLoginSuccess(true);\n  };\n\n  return (\n    <div \n      style = \n      {{display : \"flex\",\n        flexDirection : \"column\",\n        \n      }}>\n\n      <NavBar userNameFromApp={userName} userTeamFromApp={userTeam} \n      userRankFromApp={userRank} logOutClick={logOutClicked} isHome={isHome} curMenu= {curMenu} changeMenu = {changeMenu} /> \n      {isLogin? null : <Login conveyUserInfo={conveyUserInfo} isLoginSuccess={isLoginSuccess}/>}\n      {isLogin? <Dashboard />: null} \n      \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}