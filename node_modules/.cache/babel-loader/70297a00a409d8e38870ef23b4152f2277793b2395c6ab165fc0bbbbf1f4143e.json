{"ast":null,"code":"var _jsxFileName = \"/Users/kimsejin/Desktop/projects/website-for-production-planning/src/component/ApprovelistTable1.js\",\n  _s = $RefreshSig$();\nimport { React, useState, useEffect } from \"react\";\nimport { useTable, useGlobalFilter } from \"react-table\";\nimport Search1 from \"./Search1.js\";\nimport styles from \"./ApprovelistTable1.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ApprovelistTable1(_ref) {\n  _s();\n  let {\n    columns,\n    data\n  } = _ref;\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    setGlobalFilter\n  } = useTable({\n    columns,\n    data\n  }, useGlobalFilter);\n  const onCellClick = e => {\n    //console.log(e.target.cellIndex);\n    //console.log(e.target.closest(\"tr\").rowIndex); //인덱스가 1부터 시작\n    if (e.target.innerText === \"승인\") {\n      e.target.innerText = \"미승인\";\n    } else if (e.target.innerText === \"미승인\") {\n      e.target.innerText = \"승인\";\n    }\n  };\n\n  //thead : column 이름\n  //tr : row 하나\n  //td : row 1개에 들어가는 데이터 (column 1개 단위)\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Search1, {\n      onSubmit: setGlobalFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      class: styles.table,\n      ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n            ...column.getHeaderProps(),\n            children: column.render(\"Header\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        ...getTableBodyProps(),\n        children: rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...row.getRowProps(),\n            children: row.cells.map(cell => cell.value === \"승인\" || cell.value === \"미승인\" ? /*#__PURE__*/_jsxDEV(\"td\", {\n              ...cell.getCellProps(),\n              class: cell.value === \"승인\" ? styles.approveNode : styles.notApproveNode,\n              onClick: onCellClick,\n              children: cell.render(\"Cell\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"td\", {\n              children: cell.render(\"Cell\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 35\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(ApprovelistTable1, \"wIwbkk0bDnGDtfnJxj57dsKihSE=\", false, function () {\n  return [useTable];\n});\n_c = ApprovelistTable1;\nexport default ApprovelistTable1;\nvar _c;\n$RefreshReg$(_c, \"ApprovelistTable1\");","map":{"version":3,"names":["React","useState","useEffect","useTable","useGlobalFilter","Search1","styles","ApprovelistTable1","columns","data","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","setGlobalFilter","onCellClick","e","target","innerText","table","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","value","getCellProps","approveNode","notApproveNode"],"sources":["/Users/kimsejin/Desktop/projects/website-for-production-planning/src/component/ApprovelistTable1.js"],"sourcesContent":["import {React,useState, useEffect} from \"react\";\nimport {useTable, useGlobalFilter} from \"react-table\";\nimport Search1 from \"./Search1.js\";\nimport styles from \"./ApprovelistTable1.module.css\";\n\nfunction ApprovelistTable1({ columns, data }) { \n    const {getTableProps,getTableBodyProps,headerGroups, rows,prepareRow,setGlobalFilter,} = useTable({columns,data}, useGlobalFilter);\n\n    const onCellClick = (e) => {                    \n            //console.log(e.target.cellIndex);\n            //console.log(e.target.closest(\"tr\").rowIndex); //인덱스가 1부터 시작\n            if (e.target.innerText===\"승인\"){                                               \n                e.target.innerText=\"미승인\";\n            }else if (e.target.innerText===\"미승인\"){               \n                e.target.innerText=\"승인\";\n            }        \n    };\n\n\n\n    //thead : column 이름\n    //tr : row 하나\n    //td : row 1개에 들어가는 데이터 (column 1개 단위)\n\n    return (\n        <>\n            <Search1 onSubmit={setGlobalFilter} />\n            <table class={styles.table} {...getTableProps()}>\n                <thead>\n                    {headerGroups.map((headerGroup) => (\n                    <tr {...headerGroup.getHeaderGroupProps()}>\n                        {headerGroup.headers.map((column) => (\n                        <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n                        ))}\n                    </tr>\n                    ))}\n                </thead>\n                <tbody {...getTableBodyProps()}>\n                    {rows.map((row) => {\n                    prepareRow(row);\n                    return (\n                        <tr {...row.getRowProps()}>\n                        {row.cells.map(\n                            (cell) => (\n                                cell.value === \"승인\" || cell.value ===\"미승인\" ?                             \n                                <td {...cell.getCellProps()} \n                                class={ cell.value === \"승인\" ? styles.approveNode : styles.notApproveNode}\n                                onClick={onCellClick} \n                                >{cell.render(\"Cell\")}</td> \n\n                                : <td>{cell.render(\"Cell\")}</td>\n                                )\n                            )\n                        }\n                        </tr>\n                    );\n                    })}\n                </tbody>\n            </table>\n        </>\n    );\n}\n\nexport default ApprovelistTable1;"],"mappings":";;AAAA,SAAQA,KAAK,EAACC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAC/C,SAAQC,QAAQ,EAAEC,eAAe,QAAO,aAAa;AACrD,OAAOC,OAAO,MAAM,cAAc;AAClC,OAAOC,MAAM,MAAM,gCAAgC;AAAC;AAAA;AAEpD,SAASC,iBAAiB,OAAoB;EAAA;EAAA,IAAnB;IAAEC,OAAO;IAAEC;EAAK,CAAC;EACxC,MAAM;IAACC,aAAa;IAACC,iBAAiB;IAACC,YAAY;IAAEC,IAAI;IAACC,UAAU;IAACC;EAAgB,CAAC,GAAGZ,QAAQ,CAAC;IAACK,OAAO;IAACC;EAAI,CAAC,EAAEL,eAAe,CAAC;EAElI,MAAMY,WAAW,GAAIC,CAAC,IAAK;IACnB;IACA;IACA,IAAIA,CAAC,CAACC,MAAM,CAACC,SAAS,KAAG,IAAI,EAAC;MAC1BF,CAAC,CAACC,MAAM,CAACC,SAAS,GAAC,KAAK;IAC5B,CAAC,MAAK,IAAIF,CAAC,CAACC,MAAM,CAACC,SAAS,KAAG,KAAK,EAAC;MACjCF,CAAC,CAACC,MAAM,CAACC,SAAS,GAAC,IAAI;IAC3B;EACR,CAAC;;EAID;EACA;EACA;;EAEA,oBACI;IAAA,wBACI,QAAC,OAAO;MAAC,QAAQ,EAAEJ;IAAgB;MAAA;MAAA;MAAA;IAAA,QAAG,eACtC;MAAO,KAAK,EAAET,MAAM,CAACc,KAAM;MAAA,GAAKV,aAAa,EAAE;MAAA,wBAC3C;QAAA,UACKE,YAAY,CAACS,GAAG,CAAEC,WAAW,iBAC9B;UAAA,GAAQA,WAAW,CAACC,mBAAmB,EAAE;UAAA,UACpCD,WAAW,CAACE,OAAO,CAACH,GAAG,CAAEI,MAAM,iBAChC;YAAA,GAAQA,MAAM,CAACC,cAAc,EAAE;YAAA,UAAGD,MAAM,CAACE,MAAM,CAAC,QAAQ;UAAC;YAAA;YAAA;YAAA;UAAA,QACxD;QAAC;UAAA;UAAA;UAAA;QAAA,QAEL;MAAC;QAAA;QAAA;QAAA;MAAA,QACE,eACR;QAAA,GAAWhB,iBAAiB,EAAE;QAAA,UACzBE,IAAI,CAACQ,GAAG,CAAEO,GAAG,IAAK;UACnBd,UAAU,CAACc,GAAG,CAAC;UACf,oBACI;YAAA,GAAQA,GAAG,CAACC,WAAW,EAAE;YAAA,UACxBD,GAAG,CAACE,KAAK,CAACT,GAAG,CACTU,IAAI,IACDA,IAAI,CAACC,KAAK,KAAK,IAAI,IAAID,IAAI,CAACC,KAAK,KAAI,KAAK,gBAC1C;cAAA,GAAQD,IAAI,CAACE,YAAY,EAAE;cAC3B,KAAK,EAAGF,IAAI,CAACC,KAAK,KAAK,IAAI,GAAG1B,MAAM,CAAC4B,WAAW,GAAG5B,MAAM,CAAC6B,cAAe;cACzE,OAAO,EAAEnB,WAAY;cAAA,UACnBe,IAAI,CAACJ,MAAM,CAAC,MAAM;YAAC;cAAA;cAAA;cAAA;YAAA,QAAM,gBAEzB;cAAA,UAAKI,IAAI,CAACJ,MAAM,CAAC,MAAM;YAAC;cAAA;cAAA;cAAA;YAAA,QACzB;UACJ;YAAA;YAAA;YAAA;UAAA,QAEA;QAET,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QACE;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ;EAAA,gBACT;AAEX;AAAC,GAxDQpB,iBAAiB;EAAA,QACmEJ,QAAQ;AAAA;AAAA,KAD5FI,iBAAiB;AA0D1B,eAAeA,iBAAiB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}